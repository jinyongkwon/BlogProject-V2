{{>/layout/header}}

<!-- 컨테이너 시작 -->
<input id="postId" type="hidden" value="{{postId}}">
    <div class="container mt-3">
        <!-- 상세정보 보기 시작 -->
        <div class="mb-3 mt-3">
            작성자 :
            <span id="username"></span>
        </div>
        <div class="mb-3">
            <h1 id="title"></h1>
        </div>
        <hr/>
        <div class="mb-3" id="content"></div>
        <div id="auth-box" style="display: none">
            <a href="/s/post/1/updateForm" class="btn btn-primary">수정</a>
            <button id="btn-delete" class="btn btn-danger">삭제</button>
        </div>
        <!-- 상세정보 보기 끝 -->
        <br/>
        <!-- 댓글 시작 -->
        <div class="card">
            <form action="/s/post/{{postId}}/comment" method="post">
                <div class="card-body">
                    <textarea name="content" class="form-control" rows="1"></textarea>
                </div>
                <div class="card-footer">
                    <button type="submit" class="btn btn-primary">등록</button>
                </div>
            </form>
        </div>
        <br/>

        <div class="card">
            <div class="card-header">
                <b>댓글 리스트</b>
            </div>
            <ul id="reply-box" class="list-group">
                {{#comments}}
                <li class="list-group-item d-flex justify-content-between">
                    <div>{{comment.content}}</div>
                    <div class="d-flex">
                        <div class="font-italic">작성자 : {{comment.user.username}} &nbsp;</div>
                        {{#auth}}
                        <button class="badge bg-primary" onclick="deleteComment(`{{comment.id}}`);">삭제</button>
                        {{/auth}}
                    </div>
                </li>
                {{/comments}}
            </ul>
        </div>
        <br/>
        <!-- 댓글 끝 -->
    </div>
    <!-- 컨테이너 끝 -->
    <script>
        async function deleteComment(commentId){
            let response = await fetch(`/s/api/comment/${commentId}`,{
                method:"DELETE"
            });
            let responseParse = await response.json();
            console.log(responseParse);
            if (responseParse.code == 1) {
                location.reload(); // ajax + ssr
            } else {
                alert("댓글을 삭제하지 못했습니다.");
            }
        }
    </script>
    <script src="/js/post.js"></script>
    <script>
        let postDetailRender = async () => {
            let postId = $("#postId").val();
            let response = await fetch(`/api/post/${postId}`);
            let responseParse = await response.json(); // text(), json()
            console.log(responseParse);
            if (responseParse.code == 1) {
                postInfoRender(responseParse.data);
            } else {
                alert("게시글을 불러오지 못했습니다.");
            }
        }

        function postInfoRender(data) {
            let username = data.post.user.username;
            let title = data.post.title;
            let content = data.post.content;
            let auth = data.auth;

            $("#username").text(username);
            $("#title").text(title);
            $("#content").html(content);
            if (auth == true) {
                $("#auth-box").css("display", "block");
            }
        }
        postDetailRender();
    </script>

    {{>/layout/footer}}